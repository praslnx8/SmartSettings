@startuml

class ContextData {

}

abstract class SmartSetting {
    - boolean isRunning
    + boolean isRunning()
    + void start()
    + void stop()
    # abstract void applySettingChanges()
    # abstract Listener getListener()
    # abstract void isCriteriaMatching(ContextData contextData)
    + abstract View getView(Context context)
    + abstract void askSettingChangePermissionIfAny()
    - void startListenForContextChanges()
    - void stopListeningToContextChanges()
}

interface ContextCallback {
    + void onContextChange(ContextData contextData)
}

abstract class Listener {
    - ContextCallback contextCallback
    # abstract void startListenForContextChanges()
    # abstract void stopListeningToContextChanges()
    + abstract void askListeningPermissionIfAny()
    - onContextChange(ContextData contextData)
}

Listener o-- ContextCallback

SmartSetting .. ContextCallback

SmartSetting o-- Listener

SmartSetting .. ContextData : listens to contextData

interface SmartSettingProvider {
    + View getInputView(SmartSettingCallback getSmartSetting)
}

interface SmartSettingCallback {
    + void getSmartSetting(SmartSetting smartSetting)
}


SmartSettingProvider .. SmartSettingCallback : to get SmartSetting

SmartSettingCallback .. SmartSettingChooser

SmartSettingProvider .. SmartSetting

class SmartProfile <<(S,red) Singleton>> {
    - Map<SmartSetting, Boolean> smartSettings
    + void enableSmartSetting(SmartSetting smartSetting)
    + void disableSmartSetting(SmartSetting smartSetting)
    + Map<SmartSetting, Boolean> getSmartSettings()
    - void persistSmartSettingToMemory()
    - void reInitializeSmartSettingsFromMemory()
}

note left of SmartProfile
Singleton object.
end note

SmartProfile *-- SmartSetting : has List of created smart setting

class SmartSettingChooser {
    - List<SmartSettingProvider> smartSettingProvider;
}

note right of SmartSettingChooser
UI for showing list of smart setting types available.
end note

SmartSettingChooser *-- SmartSettingProvider


class Home {

}

note left of Home {
    App main UI.
}

Home .. SmartProfile : enables/diabled smartSetting
Home .. SmartSettingChooser : asks to provide SmartSetting

class MainService {
    - void startSmartSettings()
    - void stopSmartSettings()
}

note left of MainService
Never ending non ui process
end note

MainService .. SmartProfile : start/stop the smartSettings

Home .. MainService : Starts service


class LocationAwareVolumeSmartSetting {
    - double lat
    - double lon
    - int radiusInMetre
    - double phoneVolumeToSet
}

SmartSetting <|-- LocationAwareVolumeSmartSetting

class LocationAwareVolumeSmartSettingProvider {
}

SmartSettingProvider <|-- LocationAwareVolumeSmartSettingProvider

LocationAwareVolumeSmartSettingProvider .. LocationAwareVolumeSmartSetting

@enduml